{"remainingRequest":"E:\\前端\\vue_wzz_music\\node_modules\\babel-loader\\lib\\index.js!E:\\前端\\vue_wzz_music\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!E:\\前端\\vue_wzz_music\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\前端\\vue_wzz_music\\src\\components\\findMusic\\diyRecommend\\SongList.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\前端\\vue_wzz_music\\src\\components\\findMusic\\diyRecommend\\SongList.vue","mtime":1598434370801},{"path":"E:\\前端\\vue_wzz_music\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\前端\\vue_wzz_music\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\前端\\vue_wzz_music\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\前端\\vue_wzz_music\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZm9yLWVhY2giOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5sYXN0LWluZGV4LW9mIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMucmVnZXhwLmV4ZWMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcuc3BsaXQiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy93ZWIuZG9tLWNvbGxlY3Rpb25zLmZvci1lYWNoIjsKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KZXhwb3J0IGRlZmF1bHQgewogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICAvL+WJjeS4gOS4que7hOS7tuS8oOmAkui/h+adpeeahOWAvCDmlL7lhaVsb2NhbFN0b3JhZ2Xkv53lrZgKICAgICAgY3VycmVudElkOiB0aGlzLiRyb3V0ZS5wYXJhbXMuaWQgPyB0aGlzLiRyb3V0ZS5wYXJhbXMuaWQgOiB3aW5kb3cubG9jYWxTdG9yYWdlLmdldEl0ZW0oJ2N1cnJlbnRJZCcpLAogICAgICAvL+W9k+WJjeatjOWNleS/oeaBrwogICAgICBjdXJyZW50U29uZ0xpc3Q6IHsKICAgICAgICAvL+WIm+W7uuS6uuS/oeaBrwogICAgICAgIGNyZWF0b3I6IHsKICAgICAgICAgIGF2YXRhclVybDogJycsCiAgICAgICAgICBuaWNrbmFtZTogJycKICAgICAgICB9LAogICAgICAgIHRyYWNrSWRzOiBbXQogICAgICB9LAogICAgICAvL+S8oOmAkue7meS4i+S4gOS4que7hOS7tueahOaJgOacieatjOabsmlk5p+l6K+i5L+h5oGvCiAgICAgIHF1ZXJ5SWRzOiAnJywKICAgICAgLy/lvZPliY3mrYzljZXmiYDmnInmrYzmm7JpZOS/oeaBrwogICAgICBwbGF5TGlzdDogd2luZG93LmxvY2FsU3RvcmFnZS5nZXRJdGVtKCdwbGF5TGlzdCcpID09PSBudWxsID8gW10gOiB3aW5kb3cubG9jYWxTdG9yYWdlLmdldEl0ZW0oJ3BsYXlMaXN0Jykuc3BsaXQoJywnKQogICAgfTsKICB9LAogIGNyZWF0ZWQ6IGZ1bmN0aW9uIGNyZWF0ZWQoKSB7CiAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgIHRoaXMuZ2V0U29uZ0xpc3RJbmZvKCk7IC8v5rOo5YaM55uR5ZCs55qE5LqL5Lu2IOWcqG1haW4uanPkuK3lrprkuYnkuoYKCiAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcignc2V0SXRlbScsIGZ1bmN0aW9uICgpIHsKICAgICAgLy/ov5nph4zmmK/kuLrkuobku47kuLvpobXov5vlhaXnmoTmrYzljZUg6aG16Z2i5LiN6L+b6KGM5Y+Y5YyWIOaJgOS7peWKoOS4gOS4qmxvY2Fsc3RvcmFnZeebkeWQrOWZqCDnm5HlkKzlvZPliY3mrYzljZXlj5jljJYKICAgICAgLy/lpoLmnpzmnInlj5jljJbnm7TmjqXlsLHph43mlrDmn6Xor6LmlbDmja4g5pu/5o2i5o6J5LmL5YmN55qE5pWw5o2uICDlrp7njrDliLfmlrDpobXpnaIKICAgICAgX3RoaXMuY3VycmVudElkID0gcGFyc2VJbnQobG9jYWxTdG9yYWdlLmdldEl0ZW0oJ2N1cnJlbnRJZCcpKTsgLy/ph43mlrDliqDovb3mlbDmja4o5pqC5pyJQlVH5pyq5L+uKQoKICAgICAgX3RoaXMuZ2V0U29uZ0xpc3RJbmZvKCk7CiAgICB9KTsKICB9LAogIG1vdW50ZWQ6IGZ1bmN0aW9uIG1vdW50ZWQoKSB7CiAgICAvL+aKiuS4iuS4gOS4qumhtemdouS8oOmAkuadpeeahOWPguaVsOaUvuWFpWxvY2Fsc3RvcmFnZSDpmLLmraLpobXpnaLliLfmlrAg5Y+C5pWw5rKh5LqGCiAgICB3aW5kb3cubG9jYWxTdG9yYWdlLnNldEl0ZW0oJ2N1cnJlbnRJZCcsIHRoaXMuY3VycmVudElkKTsKICB9LAogIG1ldGhvZHM6IHsKICAgIC8v6I635Y+W5q2M5Y2V5L+h5oGv5bm25aSE55CG5q2M5Y2V5omA5pyJ5q2M5puy5pWw5o2uCiAgICBnZXRTb25nTGlzdEluZm86IGZ1bmN0aW9uIGdldFNvbmdMaXN0SW5mbygpIHsKICAgICAgdmFyIF90aGlzMiA9IHRoaXM7CgogICAgICB0aGlzLiRodHRwLmdldCgncGxheWxpc3QvZGV0YWlsJywgewogICAgICAgIHBhcmFtczogewogICAgICAgICAgaWQ6IHRoaXMuY3VycmVudElkCiAgICAgICAgfQogICAgICB9KS50aGVuKGZ1bmN0aW9uIChyZXMpIHsKICAgICAgICBfdGhpczIuY3VycmVudFNvbmdMaXN0ID0gcmVzLmRhdGEucGxheWxpc3Q7IC8v562J5b6F5pWw5o2u6LWL5YC85ZCOLOmprOS4iuiHquaJp+ihjOS4gOasoei3r+eUsei3s+i9rOWKoOi9veWtkOe7hOS7tgoKICAgICAgICB2YXIgaHJlZiA9IHdpbmRvdy5sb2NhdGlvbi5ocmVmOwoKICAgICAgICBpZiAoaHJlZi5zdWJzdHJpbmcoaHJlZi5sYXN0SW5kZXhPZignLycpLCBocmVmLmxlbmd0aCkgIT09ICcvbXVzaWNQYWdlJykgewogICAgICAgICAgLy/lpoLmnpzkuLroh6rot7PovazliJnmiafooYwKICAgICAgICAgIF90aGlzMi50b011c2ljTGlzdFBhZ2UoKTsKICAgICAgICB9CiAgICAgIH0pOwogICAgfSwKICAgIC8v6Lev55Sx6Lez6L2s5bm25pC65bim5q2M5Y2VaWRz5pWw57uE5Y+C5pWwCiAgICB0b011c2ljTGlzdFBhZ2U6IGZ1bmN0aW9uIHRvTXVzaWNMaXN0UGFnZSgpIHsKICAgICAgdmFyIHF1ZXJ5SWRzID0gJyc7CiAgICAgIHRoaXMuY3VycmVudFNvbmdMaXN0LnRyYWNrSWRzLmZvckVhY2goZnVuY3Rpb24gKGl0ZW0pIHsKICAgICAgICBxdWVyeUlkcyArPSBpdGVtLmlkICsgJywnOwogICAgICB9KTsKICAgICAgdGhpcy4kcm91dGVyLnB1c2goewogICAgICAgIG5hbWU6ICdtdXNpY1BhZ2UnLAogICAgICAgIHBhcmFtczogewogICAgICAgICAgaWRzOiBxdWVyeUlkcy5zdWJzdHIoMCwgcXVlcnlJZHMubGVuZ3RoIC0gMSkKICAgICAgICB9CiAgICAgIH0pOwogICAgfSwKICAgIC8v6Lev55Sx6Lez6L2s5pC65bim5Y+C5pWwCiAgICB0b0NvbW1lbnRQYWdlOiBmdW5jdGlvbiB0b0NvbW1lbnRQYWdlKCkgewogICAgICB0aGlzLiRyb3V0ZXIucHVzaCgnL2NvbW1lbnQvJyArIHRoaXMuY3VycmVudElkKTsKICAgIH0sCiAgICAvL+WtkOe7hOS7tuS8oOmAkuadpeeahOatjOWNleaJgOacieatjOabsmlk5L+h5oGvLOWSjOW9k+WJjeaSreaUvueahOmfs+S5kOeahGlkCiAgICBzZXRTb25nTGlzdEluZm86IGZ1bmN0aW9uIHNldFNvbmdMaXN0SW5mbyhzb25nTGlzdCwgY3VySWQpIHsKICAgICAgdGhpcy5wbGF5TGlzdCA9IHNvbmdMaXN0OwogICAgICB0aGlzLiRlbWl0KCdzZXRTb25nTGlzdEluZm8nLCBzb25nTGlzdCwgY3VySWQpOwogICAgfSwKICAgIC8v5pS26JeP5q2M5Y2VCiAgICBzdWJzY3JpcGU6IGZ1bmN0aW9uIHN1YnNjcmlwZShpZCkgewogICAgICB2YXIgX3RoaXMzID0gdGhpczsKCiAgICAgIHRoaXMuJGh0dHAuZ2V0KCdwbGF5bGlzdC9zdWJzY3JpYmUnLCB7CiAgICAgICAgcGFyYW1zOiB7CiAgICAgICAgICBpZDogaWQsCiAgICAgICAgICB0OiAxCiAgICAgICAgfQogICAgICB9KS50aGVuKGZ1bmN0aW9uIChyZXMpIHsKICAgICAgICBjb25zb2xlLmxvZyhyZXMpOwoKICAgICAgICBpZiAocmVzLmRhdGEuY29kZSA9PT0gMjAwKSB7CiAgICAgICAgICByZXR1cm4gX3RoaXMzLiRtZXNzYWdlLnN1Y2Nlc3MoJ+aUtuiXj+aIkOWKnyzmlbDmja7lkIzmraXpnIDopoHml7bpl7QhJyk7CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgIHJldHVybiBfdGhpczMuJG1lc3NhZ2UuaW5mbygn5pS26JeP5aSx6LSlIScpOwogICAgICAgIH0KICAgICAgfSk7CiAgICB9CiAgfQp9Ow=="},{"version":3,"sources":["SongList.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n    <el-container style=\"margin-bottom: 55px;\">\r\n\r\n        <el-header height=\"220px;\">\r\n            <el-row>\r\n                <!--歌单图标-->\r\n                <img :src=\"currentSongList.coverImgUrl\" style=\"width: 220px;height: 220px;\"/>\r\n\r\n                <!--右侧歌曲信息-->\r\n                <div style=\"float:right;color: gray\">\r\n                    <div style=\"opacity: 0.6\">\r\n                        <p>歌曲数 | 播放量</p>\r\n                        <p style=\"float:right;margin: 0\">{{currentSongList.trackCount}} |\r\n                            {{(currentSongList.playCount/10000).toFixed(0)}}万</p>\r\n                    </div>\r\n                </div>\r\n\r\n                <!--标签及名字-->\r\n                <el-tag type=\"danger\" style=\"background-color: white;position: absolute;top: 0;left: 240px;\">精品歌单\r\n                </el-tag>\r\n                <h2 style=\"position: absolute;top: -20px;left: 320px;font-weight: 400\">{{currentSongList.name}}</h2>\r\n\r\n                <!--作者信息-->\r\n                <img :src=\"currentSongList.creator.avatarUrl\"\r\n                     style=\"width: 35px;height: 35px;border-radius:15px;position: absolute;top: 50px;left: 15%;\">\r\n                <span style=\"position:absolute;top: 57px;left: 18%;\">{{currentSongList.creator.nickname}}</span>\r\n                <span style=\"position:absolute;top: 57px;left: 27%;opacity: 0.7;\">{{currentSongList.createTime | dateFormat}}创建</span>\r\n\r\n\r\n                <!--按钮组-->\r\n                <el-button type=\"danger\" size=\"mini\" icon=\"el-icon-video-play\"\r\n                           style=\"position:absolute;top: 100px;left: 240px;\"\r\n                           @click=\"setSongListInfo(playList,playList[0])\">\r\n                    播放全部\r\n                </el-button>\r\n\r\n                <el-button icon=\"el-icon-folder-add\" size=\"mini\" @click=\"subscripe(currentSongList.id)\"\r\n                           style=\"position: absolute;top: 100px;left: 340px;color: black\">\r\n                    收藏({{currentSongList.subscribedCount}})\r\n                </el-button>\r\n\r\n                <el-button icon=\"el-icon-share\" size=\"mini\"\r\n                           style=\"position: absolute;top: 100px;left: 480px;color: black\">\r\n                    分享({{currentSongList.shareCount}})\r\n                </el-button>\r\n\r\n                <!--标签信息-->\r\n                <span style=\"position: absolute;top: 150px;left: 240px;\">\r\n                    标签: <span style=\"color: rgb(12,115,194);cursor: pointer\"\r\n                              v-for=\"(item,index) in currentSongList.tags\">{{index+1 === currentSongList.tags.length ? item : item+' / '}}</span>\r\n                </span>\r\n\r\n                <!--简介信息-->\r\n                <el-collapse style=\"position: absolute;top: 180px;left: 240px;border: none;z-index: 999\">\r\n                    <el-collapse-item :title=\"'简介: ' + (currentSongList.description + '').substr(0,26) + '...' \">\r\n                        <p>{{currentSongList.description}}</p>\r\n                    </el-collapse-item>\r\n                </el-collapse>\r\n            </el-row>\r\n\r\n        </el-header>\r\n\r\n        <el-main>\r\n\r\n            <el-menu default-active=\"1\" class=\"el-menu-demo\" mode=\"horizontal\" style=\"width: 280px;\">\r\n                <el-menu-item index=\"1\" @click=\"toMusicListPage\">歌曲列表</el-menu-item>\r\n                <el-menu-item index=\"2\" @click=\"toCommentPage\">评论({{currentSongList.commentCount}})</el-menu-item>\r\n            </el-menu>\r\n\r\n            <router-view ref=\"child\" @setSongListInfo=\"setSongListInfo\"></router-view>\r\n        </el-main>\r\n\r\n    </el-container>\r\n</template>\r\n\r\n<script>\r\n    export default {\r\n        data() {\r\n            return {\r\n                //前一个组件传递过来的值 放入localStorage保存\r\n                currentId: this.$route.params.id ? this.$route.params.id : window.localStorage.getItem('currentId'),\r\n                //当前歌单信息\r\n                currentSongList: {\r\n                    //创建人信息\r\n                    creator: {\r\n                        avatarUrl: '',\r\n                        nickname: '',\r\n                    },\r\n                    trackIds: []\r\n                },\r\n                //传递给下一个组件的所有歌曲id查询信息\r\n                queryIds: '',\r\n                //当前歌单所有歌曲id信息\r\n                playList: window.localStorage.getItem('playList') === null ? [] : window.localStorage.getItem('playList').split(',')\r\n            }\r\n        },\r\n        created() {\r\n            this.getSongListInfo();\r\n            //注册监听的事件 在main.js中定义了\r\n            window.addEventListener('setItem', () => {\r\n                //这里是为了从主页进入的歌单 页面不进行变化 所以加一个localstorage监听器 监听当前歌单变化\r\n                //如果有变化直接就重新查询数据 替换掉之前的数据  实现刷新页面\r\n                this.currentId = parseInt(localStorage.getItem('currentId'))\r\n                //重新加载数据(暂有BUG未修)\r\n                this.getSongListInfo()\r\n\r\n            })\r\n        },\r\n        mounted() {\r\n            //把上一个页面传递来的参数放入localstorage 防止页面刷新 参数没了\r\n            window.localStorage.setItem('currentId', this.currentId);\r\n        },\r\n        methods: {\r\n            //获取歌单信息并处理歌单所有歌曲数据\r\n            getSongListInfo() {\r\n                this.$http.get('playlist/detail', {params: {id: this.currentId}}).then(res => {\r\n                    this.currentSongList = res.data.playlist\r\n                    //等待数据赋值后,马上自执行一次路由跳转加载子组件\r\n                    const href = window.location.href;\r\n                    if (href.substring(href.lastIndexOf('/'), href.length) !== '/musicPage') {//如果为自跳转则执行\r\n                        this.toMusicListPage()\r\n                    }\r\n                })\r\n            },\r\n            //路由跳转并携带歌单ids数组参数\r\n            toMusicListPage() {\r\n                var queryIds = ''\r\n                this.currentSongList.trackIds.forEach(item => {\r\n                    queryIds += item.id + ','\r\n                })\r\n                this.$router.push({\r\n                    name: 'musicPage',\r\n                    params: {\r\n                        ids: queryIds.substr(0, queryIds.length - 1)\r\n                    }\r\n                })\r\n            },\r\n            //路由跳转携带参数\r\n            toCommentPage() {\r\n                this.$router.push('/comment/' + this.currentId);\r\n            },\r\n            //子组件传递来的歌单所有歌曲id信息,和当前播放的音乐的id\r\n            setSongListInfo(songList, curId) {\r\n                this.playList = songList\r\n                this.$emit('setSongListInfo', songList, curId);\r\n            },\r\n            //收藏歌单\r\n            subscripe(id) {\r\n                this.$http.get('playlist/subscribe', {params: {id: id, t: 1}}).then(res => {\r\n                    console.log(res)\r\n                    if (res.data.code === 200) {\r\n                        return this.$message.success('收藏成功,数据同步需要时间!')\r\n                    } else {\r\n                        return this.$message.info('收藏失败!')\r\n                    }\r\n                })\r\n            }\r\n        },\r\n    }\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n    .el-button {\r\n        border-radius: 5px;\r\n        color: white;\r\n    }\r\n\r\n    .el-menu.el-menu--horizontal {\r\n        border-bottom: 0px;\r\n    }\r\n\r\n    .el-menu-item.is-active {\r\n        color: black;\r\n        border-bottom: 2px solid red !important;\r\n    }\r\n</style>\r\n"],"sourceRoot":"src/components/findMusic/diyRecommend"}]}