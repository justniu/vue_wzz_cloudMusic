{"remainingRequest":"E:\\前端\\vue_wzz_music\\node_modules\\babel-loader\\lib\\index.js!E:\\前端\\vue_wzz_music\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!E:\\前端\\vue_wzz_music\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\前端\\vue_wzz_music\\src\\components\\findMusic\\singer\\SingerAlbum.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\前端\\vue_wzz_music\\src\\components\\findMusic\\singer\\SingerAlbum.vue","mtime":1598424998227},{"path":"E:\\前端\\vue_wzz_music\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\前端\\vue_wzz_music\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\前端\\vue_wzz_music\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\前端\\vue_wzz_music\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\前端\\vue_wzz_music\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\前端\\vue_wzz_music\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\前端\\vue_wzz_music\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\前端\\vue_wzz_music\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZm9yLWVhY2giOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcucGFkLXN0YXJ0IjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvd2ViLmRvbS1jb2xsZWN0aW9ucy5mb3ItZWFjaCI7Ci8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCmV4cG9ydCBkZWZhdWx0IHsKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgLy/mrYzmiYvkuJPovpHmn6Xor6LmnaHku7YKICAgICAgcXVlcnlJbmZvOiB7CiAgICAgICAgaWQ6IHRoaXMuJHJvdXRlLnBhcmFtcy5pZCwKICAgICAgICBsaW1pdDogNCwKICAgICAgICBvZmZzZXQ6IDAKICAgICAgfSwKICAgICAgLy/lvZPliY3mrYzmiYvnmoRpZAogICAgICBzaW5nZXJJZDogdGhpcy4kcm91dGUucGFyYW1zLmlkLAogICAgICAvL+atjOaJi+eDremXqDUw6aaWCiAgICAgIGhvdDUwU29uZ3M6IFtdLAogICAgICAvLzUw6aaW6buY6K6k5bGV56S6MTDpppYKICAgICAgZGVmYXVsdFNob3c6IDEwLAogICAgICAvL+eItue7hOS7tuW9k+WJjeaSreaUvueahOmfs+S5kOeahGlkCiAgICAgIGN1cklkOiBwYXJzZUludCh3aW5kb3cubG9jYWxTdG9yYWdlLmdldEl0ZW0oJ2N1clBsYXlNdXNpY0lkJykpLAogICAgICAvL+W9k+WJjeatjOaJi+eDremXqOS4k+i+keS/oeaBryjkuI3ljIXlkKvkuJPovpHlhoXlkKvnmoTmrYzmm7IpCiAgICAgIGhvdEFsYnVtOiBbXSwKICAgICAgLy/lvZPliY3mrYzmiYvkuJPovpHlhoXmrYzmm7Lkv6Hmga8KICAgICAgYWxidW1NdXNpY0luZm86IFtdCiAgICB9OwogIH0sCiAgY3JlYXRlZDogZnVuY3Rpb24gY3JlYXRlZCgpIHsKICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgLy/ojrflj5bmrYzmm7Lng63pl6g1MOmmluatjAogICAgdGhpcy5nZXRIb3Q1ME11c2ljKCk7IC8v6I635b6X5q2M5omL55qE54Ot6Zeo5LiT6L6R5L+h5oGvCgogICAgdGhpcy5nZXRIb3RBbGJ1bSgpOwogICAgLyoqCiAgICAgKiDms6jlhoznm5HlkKznmoTkuovku7Yg5ZyobWFpbi5qc+S4reWumuS5ieS6hgogICAgICogKOebkeWQrOW9k+WJjeaSreaUvumfs+S5kOeahGlk5Y+Y5YyWIOWTjeW6lOW8j+eahOWIh+aNouW9k+WJjeaSreaUvueahOmfs+S5kOeahOWJjee8gOWbvuaghykKICAgICAqLwoKICAgIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKCdzZXRJdGVtJywgZnVuY3Rpb24gKCkgewogICAgICBfdGhpcy5jdXJJZCA9IHBhcnNlSW50KGxvY2FsU3RvcmFnZS5nZXRJdGVtKCdjdXJQbGF5TXVzaWNJZCcpKTsKICAgIH0pOwogIH0sCiAgbWV0aG9kczogewogICAgLy/ojrflj5bmrYzmm7Lng63pl6g1MOmmluatjAogICAgZ2V0SG90NTBNdXNpYzogZnVuY3Rpb24gZ2V0SG90NTBNdXNpYygpIHsKICAgICAgdmFyIF90aGlzMiA9IHRoaXM7CgogICAgICB0aGlzLiRodHRwLmdldCgnYXJ0aXN0L3RvcC9zb25nJywgewogICAgICAgIHBhcmFtczogewogICAgICAgICAgaWQ6IHRoaXMuc2luZ2VySWQKICAgICAgICB9CiAgICAgIH0pLnRoZW4oZnVuY3Rpb24gKHJlcykgewogICAgICAgIF90aGlzMi5ob3Q1MFNvbmdzID0gcmVzLmRhdGEuc29uZ3M7IC8v5aSE55CG5pe26ZW/5pWw5o2uCgogICAgICAgIF90aGlzMi5ob3Q1MFNvbmdzLmZvckVhY2goZnVuY3Rpb24gKGl0ZW0pIHsKICAgICAgICAgIHZhciBkdCA9IG5ldyBEYXRlKGl0ZW0uZHQpOwogICAgICAgICAgdmFyIG1tID0gKGR0LmdldE1pbnV0ZXMoKSArICcnKS5wYWRTdGFydCgyLCAnMCcpOwogICAgICAgICAgdmFyIHNzID0gKGR0LmdldFNlY29uZHMoKSArICcnKS5wYWRTdGFydCgyLCAnMCcpOwogICAgICAgICAgaXRlbS5kdCA9IG1tICsgJzonICsgc3M7CiAgICAgICAgfSk7CiAgICAgIH0pOwogICAgfSwKICAgIC8v5YiH5o2i5b2T5YmN5pi+56S654Ot6ZeoNTDpppYKICAgIGNoYW5nZURlZmF1bHROdW06IGZ1bmN0aW9uIGNoYW5nZURlZmF1bHROdW0oKSB7CiAgICAgIHRoaXMuJCgnLnNob3cnKS5yZW1vdmUoKTsKICAgICAgdGhpcy5kZWZhdWx0U2hvdyA9IDUwOwogICAgfSwKICAgIC8v6I635Y+W5q2M5omL54Ot6Zeo5LiT6L6RCiAgICBnZXRIb3RBbGJ1bTogZnVuY3Rpb24gZ2V0SG90QWxidW0oKSB7CiAgICAgIHZhciBfdGhpczMgPSB0aGlzOwoKICAgICAgdGhpcy4kaHR0cC5nZXQoJ2FydGlzdC9hbGJ1bScsIHsKICAgICAgICBwYXJhbXM6IHRoaXMucXVlcnlJbmZvCiAgICAgIH0pLnRoZW4oZnVuY3Rpb24gKHJlcykgewogICAgICAgIF90aGlzMy5ob3RBbGJ1bSA9IHJlcy5kYXRhLmhvdEFsYnVtczsKCiAgICAgICAgX3RoaXMzLmhvdEFsYnVtLmZvckVhY2goZnVuY3Rpb24gKGl0ZW0pIHsKICAgICAgICAgIF90aGlzMy4kaHR0cC5nZXQoJ2FsYnVtJywgewogICAgICAgICAgICBwYXJhbXM6IHsKICAgICAgICAgICAgICBpZDogaXRlbS5pZAogICAgICAgICAgICB9CiAgICAgICAgICB9KS50aGVuKGZ1bmN0aW9uIChyZXMpIHsKICAgICAgICAgICAgLy/lpITnkIbml7bplb8g5YaN5pS+5YWl5pWw5o2uCiAgICAgICAgICAgIHJlcy5kYXRhLnNvbmdzLmZvckVhY2goZnVuY3Rpb24gKGl0ZW0pIHsKICAgICAgICAgICAgICB2YXIgZHQgPSBuZXcgRGF0ZShpdGVtLmR0KTsKICAgICAgICAgICAgICB2YXIgbW0gPSAoZHQuZ2V0TWludXRlcygpICsgJycpLnBhZFN0YXJ0KDIsICcwJyk7CiAgICAgICAgICAgICAgdmFyIHNzID0gKGR0LmdldFNlY29uZHMoKSArICcnKS5wYWRTdGFydCgyLCAnMCcpOwogICAgICAgICAgICAgIGl0ZW0uZHQgPSBtbSArICc6JyArIHNzOwogICAgICAgICAgICB9KTsKCiAgICAgICAgICAgIF90aGlzMy5hbGJ1bU11c2ljSW5mby5wdXNoKHJlcy5kYXRhKTsKICAgICAgICAgIH0pOwogICAgICAgIH0pOyAvL+WkhOeQhuaXtumVv+aVsOaNrgoKCiAgICAgICAgX3RoaXMzLmhvdEFsYnVtLmZvckVhY2goZnVuY3Rpb24gKGl0ZW0pIHsKICAgICAgICAgIHZhciBkdCA9IG5ldyBEYXRlKGl0ZW0uZHQpOwogICAgICAgICAgdmFyIG1tID0gKGR0LmdldE1pbnV0ZXMoKSArICcnKS5wYWRTdGFydCgyLCAnMCcpOwogICAgICAgICAgdmFyIHNzID0gKGR0LmdldFNlY29uZHMoKSArICcnKS5wYWRTdGFydCgyLCAnMCcpOwogICAgICAgICAgaXRlbS5kdCA9IG1tICsgJzonICsgc3M7CiAgICAgICAgfSk7CiAgICAgIH0pOwogICAgfSwKICAgIC8v5YiG6aG15o+S5Lu26aG15pWw5pS55Y+YCiAgICBoYW5kbGVDdXJyZW50Q2hhbmdlOiBmdW5jdGlvbiBoYW5kbGVDdXJyZW50Q2hhbmdlKG5ld1BhZ2UpIHsKICAgICAgdGhpcy5xdWVyeUluZm8ub2Zmc2V0ID0gKG5ld1BhZ2UgLSAxKSAqIHRoaXMucXVlcnlJbmZvLmxpbWl0OwogICAgICB0aGlzLmdldEhvdEFsYnVtKCk7CiAgICB9LAogICAgLy/mkq3mlL7ng63pl6jkupTljYHpppYKICAgIHBsYXlIb3Q1ME11c2ljOiBmdW5jdGlvbiBwbGF5SG90NTBNdXNpYyhyb3cpIHsKICAgICAgdmFyIHBsYXlMaXN0ID0gW107CiAgICAgIHRoaXMuaG90NTBTb25ncy5mb3JFYWNoKGZ1bmN0aW9uIChpdGVtKSB7CiAgICAgICAgcGxheUxpc3QucHVzaChpdGVtLmlkKTsKICAgICAgfSk7CiAgICAgIHRoaXMuJGVtaXQoJ3NldFNvbmdMaXN0SW5mbycsIHBsYXlMaXN0LCByb3cuaWQpOwogICAgfSwKICAgIC8v5pKt5pS+5LiT6L6R5Lit55qE5q2M5puyCiAgICBwbGF5QWxidW1NdXNpYzogZnVuY3Rpb24gcGxheUFsYnVtTXVzaWMocm93KSB7CiAgICAgIHRoaXMuJGVtaXQoJ3NldFNvbmdMaXN0SW5mbycsIHdpbmRvdy5sb2NhbFN0b3JhZ2UuZ2V0SXRlbSgncGxheUxpc3QnKSwgcm93LmlkKTsKICAgIH0KICB9Cn07"},{"version":3,"sources":["SingerAlbum.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n    <div style=\"margin-top: 50px;margin-bottom: 75px;\">\r\n\r\n        <!--默认的头部热门五十首-->\r\n        <el-row>\r\n            <el-col :span=\"4\" :offset=\"2\">\r\n                <el-image src=\"imgs/top50.png\" style=\"width: 150px;height: 150px;\"></el-image>\r\n            </el-col>\r\n\r\n            <el-col :span=\"8\">\r\n                热门50曲\r\n                <el-table :data=\"hot50Songs.slice(0,defaultShow)\" highlight-current-row stripe\r\n                          :show-header=\"false\" @row-dblclick=\"playHot50Music\"\r\n                          style=\"margin-top: 15px;cursor: context-menu;border: 1px solid rgb(230,230,230)\">\r\n\r\n                    <el-table-column label=\"#\" type=\"index\">\r\n                        <template scope=\"scope\">\r\n                            <img v-if=\"curId === scope.row.id\" src=\"imgs/isPlay.png\" alt=\"\">\r\n                            <p v-else>{{scope.$index+1 >= 10 ? scope.$index+1 : ('0'+(scope.$index+1)).toString()}}</p>\r\n                        </template>\r\n                    </el-table-column>\r\n\r\n                    <el-table-column label=\"操作\" width=\"70px;\">\r\n                        <template>\r\n                            <i class=\"el-icon-star-off\" style=\"font-size: 18px;cursor: pointer\"></i>\r\n                            <i class=\"el-icon-download\" style=\"margin-left: 10px;font-size: 18px;cursor:pointer;\"></i>\r\n                        </template>\r\n                    </el-table-column>\r\n\r\n                    <el-table-column v-if=\"false\" label=\"id\" prop=\"id\"></el-table-column>\r\n\r\n                    <el-table-column label=\"音乐标题\" prop=\"name\"></el-table-column>\r\n\r\n                    <el-table-column label=\"时长\" prop=\"dt\" width=\"80px;\"></el-table-column>\r\n\r\n                </el-table>\r\n                <p class=\"show\" style=\"margin-top: 15px;cursor: pointer;\" @click=\"changeDefaultNum\">查看全部50首></p>\r\n            </el-col>\r\n        </el-row>\r\n\r\n        <!--所有专辑信息-->\r\n        <el-row v-for=\"item in albumMusicInfo\" style=\"margin-top: 45px;\">\r\n            <el-col :span=\"4\" :offset=\"2\">\r\n                <el-image :src=\"item.album.picUrl\" style=\"width: 150px;height: 150px;\"></el-image>\r\n                <span style=\"position:absolute;left: 140px;top: 150px;\">{{item.album.publishTime | dateFormatToYMD}}</span>\r\n            </el-col>\r\n\r\n            <el-col :span=\"8\">\r\n                {{item.album.name}}\r\n                <el-table :data=\"item.songs\" highlight-current-row stripe\r\n                          :show-header=\"false\" @row-dblclick=\"playAlbumMusic\"\r\n                          style=\"margin-top: 15px;cursor: context-menu;border: 1px solid rgb(230,230,230)\"\r\n                >\r\n\r\n                    <el-table-column type=\"index\">\r\n                        <template scope=\"scope\">\r\n                            <img v-if=\"curId === scope.row.id\" src=\"imgs/isPlay.png\" alt=\"\">\r\n                            <p v-else>{{scope.$index+1 >= 10 ? scope.$index+1 : ('0'+(scope.$index+1)).toString()}}</p>\r\n                        </template>\r\n                    </el-table-column>\r\n\r\n                    <el-table-column width=\"70px;\">\r\n                        <template>\r\n                            <i class=\"el-icon-star-off\" style=\"font-size: 18px;cursor: pointer\"></i>\r\n                            <i class=\"el-icon-download\" style=\"margin-left: 10px;font-size: 18px;cursor:pointer;\"></i>\r\n                        </template>\r\n                    </el-table-column>\r\n\r\n                    <el-table-column v-if=\"false\" label=\"id\" prop=\"id\"></el-table-column>\r\n\r\n                    <el-table-column prop=\"name\"></el-table-column>\r\n\r\n                    <el-table-column prop=\"dt\" width=\"80px;\"></el-table-column>\r\n\r\n                </el-table>\r\n            </el-col>\r\n        </el-row>\r\n        <!--分页-->\r\n        <el-pagination background\r\n                       layout=\"prev,next\"  :page-size=\"queryInfo.limit\"\r\n                       @current-change=\"handleCurrentChange\">\r\n        </el-pagination>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    export default {\r\n        data() {\r\n            return {\r\n                //歌手专辑查询条件\r\n                queryInfo: {\r\n                    id: this.$route.params.id,\r\n                    limit: 4,\r\n                    offset: 0,\r\n                },\r\n                //当前歌手的id\r\n                singerId: this.$route.params.id,\r\n                //歌手热门50首\r\n                hot50Songs: [],\r\n                //50首默认展示10首\r\n                defaultShow: 10,\r\n                //父组件当前播放的音乐的id\r\n                curId: parseInt(window.localStorage.getItem('curPlayMusicId')),\r\n                //当前歌手热门专辑信息(不包含专辑内含的歌曲)\r\n                hotAlbum: [],\r\n                //当前歌手专辑内歌曲信息\r\n                albumMusicInfo: []\r\n            }\r\n        },\r\n        created() {\r\n            //获取歌曲热门50首歌\r\n            this.getHot50Music()\r\n            //获得歌手的热门专辑信息\r\n            this.getHotAlbum()\r\n            /**\r\n             * 注册监听的事件 在main.js中定义了\r\n             * (监听当前播放音乐的id变化 响应式的切换当前播放的音乐的前缀图标)\r\n             */\r\n            window.addEventListener('setItem', ()=> {\r\n                this.curId = parseInt(localStorage.getItem('curPlayMusicId'))\r\n            })\r\n        },\r\n        methods: {\r\n            //获取歌曲热门50首歌\r\n            getHot50Music() {\r\n                this.$http.get('artist/top/song', {params: {id: this.singerId}}).then(res => {\r\n                    this.hot50Songs = res.data.songs;\r\n                    //处理时长数据\r\n                    this.hot50Songs.forEach(item => {\r\n                        const dt = new Date(item.dt)\r\n                        const mm = (dt.getMinutes() + '').padStart(2, '0')\r\n                        const ss = (dt.getSeconds() + '').padStart(2, '0')\r\n\r\n                        item.dt = mm + ':' + ss\r\n                    })\r\n                })\r\n            },\r\n            //切换当前显示热门50首\r\n            changeDefaultNum() {\r\n                this.$('.show').remove()\r\n                this.defaultShow = 50\r\n            },\r\n            //获取歌手热门专辑\r\n            getHotAlbum() {\r\n                this.$http.get('artist/album', {params: this.queryInfo}).then(res => {\r\n                    this.hotAlbum = res.data.hotAlbums\r\n                    this.hotAlbum.forEach(item => {\r\n                        this.$http.get('album', {params: {id: item.id}}).then(res => {\r\n                            //处理时长 再放入数据\r\n                            res.data.songs.forEach(item => {\r\n                                const dt = new Date(item.dt)\r\n                                const mm = (dt.getMinutes() + '').padStart(2, '0')\r\n                                const ss = (dt.getSeconds() + '').padStart(2, '0')\r\n\r\n                                item.dt = mm + ':' + ss\r\n                            })\r\n                            this.albumMusicInfo.push(res.data)\r\n                        })\r\n                    })\r\n                    //处理时长数据\r\n                    this.hotAlbum.forEach(item => {\r\n                        const dt = new Date(item.dt)\r\n                        const mm = (dt.getMinutes() + '').padStart(2, '0')\r\n                        const ss = (dt.getSeconds() + '').padStart(2, '0')\r\n\r\n                        item.dt = mm + ':' + ss\r\n                    })\r\n                })\r\n            },\r\n            //分页插件页数改变\r\n            handleCurrentChange(newPage) {\r\n                this.queryInfo.offset = (newPage - 1) * this.queryInfo.limit\r\n                this.getHotAlbum();\r\n            },\r\n            //播放热门五十首\r\n            playHot50Music(row) {\r\n                var playList = []\r\n                this.hot50Songs.forEach(item => {\r\n                    playList.push(item.id)\r\n                })\r\n                this.$emit('setSongListInfo', playList, row.id)\r\n            },\r\n            //播放专辑中的歌曲\r\n            playAlbumMusic(row) {\r\n                this.$emit('setSongListInfo', window.localStorage.getItem('playList'), row.id)\r\n            }\r\n        }\r\n    }\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>\r\n"],"sourceRoot":"src/components/findMusic/singer"}]}