{"remainingRequest":"E:\\前端\\vue_wzz_music\\node_modules\\babel-loader\\lib\\index.js!E:\\前端\\vue_wzz_music\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!E:\\前端\\vue_wzz_music\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\前端\\vue_wzz_music\\src\\components\\recommend\\diy\\SongList.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\前端\\vue_wzz_music\\src\\components\\recommend\\diy\\SongList.vue","mtime":1597998290289},{"path":"E:\\前端\\vue_wzz_music\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\前端\\vue_wzz_music\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\前端\\vue_wzz_music\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\前端\\vue_wzz_music\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZm9yLWVhY2giOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5sYXN0LWluZGV4LW9mIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMucmVnZXhwLmV4ZWMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcuc3BsaXQiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy93ZWIuZG9tLWNvbGxlY3Rpb25zLmZvci1lYWNoIjsKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KZXhwb3J0IGRlZmF1bHQgewogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICAvL+WJjeS4gOS4que7hOS7tuS8oOmAkui/h+adpeeahOWAvCDmlL7lhaVsb2NhbFN0b3JhZ2Xkv53lrZgKICAgICAgY3VycmVudElkOiB0aGlzLiRyb3V0ZS5wYXJhbXMuaWQgPyB0aGlzLiRyb3V0ZS5wYXJhbXMuaWQgOiB3aW5kb3cubG9jYWxTdG9yYWdlLmdldEl0ZW0oJ2N1cnJlbnRJZCcpLAogICAgICAvL+W9k+WJjeatjOWNleS/oeaBrwogICAgICBjdXJyZW50U29uZ0xpc3Q6IHsKICAgICAgICAvL+WIm+W7uuS6uuS/oeaBrwogICAgICAgIGNyZWF0b3I6IHsKICAgICAgICAgIGF2YXRhclVybDogJycsCiAgICAgICAgICBuaWNrbmFtZTogJycKICAgICAgICB9LAogICAgICAgIHRyYWNrSWRzOiBbXQogICAgICB9LAogICAgICAvL+S8oOmAkue7meS4i+S4gOS4que7hOS7tueahOaJgOacieatjOabsmlk5p+l6K+i5L+h5oGvCiAgICAgIHF1ZXJ5SWRzOiAnJywKICAgICAgLy/lvZPliY3mrYzljZXmiYDmnInmrYzmm7JpZOS/oeaBrwogICAgICBwbGF5TGlzdDogd2luZG93LmxvY2FsU3RvcmFnZS5nZXRJdGVtKCdwbGF5TGlzdCcpID09PSBudWxsID8gW10gOiB3aW5kb3cubG9jYWxTdG9yYWdlLmdldEl0ZW0oJ3BsYXlMaXN0Jykuc3BsaXQoJywnKQogICAgfTsKICB9LAogIGNyZWF0ZWQ6IGZ1bmN0aW9uIGNyZWF0ZWQoKSB7CiAgICB0aGlzLmdldFNvbmdMaXN0SW5mbygpOwogIH0sCiAgbW91bnRlZDogZnVuY3Rpb24gbW91bnRlZCgpIHsKICAgIC8v5oqK5LiK5LiA5Liq6aG16Z2i5Lyg6YCS5p2l55qE5Y+C5pWw5pS+5YWlbG9jYWxzdG9yYWdlIOmYsuatoumhtemdouWIt+aWsCDlj4LmlbDmsqHkuoYKICAgIHdpbmRvdy5sb2NhbFN0b3JhZ2Uuc2V0SXRlbSgnY3VycmVudElkJywgdGhpcy5jdXJyZW50SWQpOwogIH0sCiAgbWV0aG9kczogewogICAgLy/ojrflj5bmrYzljZXkv6Hmga/lubblpITnkIbmrYzljZXmiYDmnInmrYzmm7LmlbDmja4KICAgIGdldFNvbmdMaXN0SW5mbzogZnVuY3Rpb24gZ2V0U29uZ0xpc3RJbmZvKCkgewogICAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgICAgdGhpcy4kaHR0cC5nZXQoJ3BsYXlsaXN0L2RldGFpbCcsIHsKICAgICAgICBwYXJhbXM6IHsKICAgICAgICAgIGlkOiB0aGlzLmN1cnJlbnRJZAogICAgICAgIH0KICAgICAgfSkudGhlbihmdW5jdGlvbiAocmVzKSB7CiAgICAgICAgX3RoaXMuY3VycmVudFNvbmdMaXN0ID0gcmVzLmRhdGEucGxheWxpc3Q7IC8v562J5b6F5pWw5o2u6LWL5YC85ZCOLOmprOS4iuiHquaJp+ihjOS4gOasoei3r+eUsei3s+i9rOWKoOi9veWtkOe7hOS7tgoKICAgICAgICB2YXIgaHJlZiA9IHdpbmRvdy5sb2NhdGlvbi5ocmVmOwoKICAgICAgICBpZiAoaHJlZi5zdWJzdHJpbmcoaHJlZi5sYXN0SW5kZXhPZignLycpLCBocmVmLmxlbmd0aCkgIT09ICcvbXVzaWNQYWdlJykgewogICAgICAgICAgLy/lpoLmnpzkuLroh6rot7PovazliJnmiafooYwKICAgICAgICAgIF90aGlzLnRvTXVzaWNMaXN0UGFnZSgpOwogICAgICAgIH0KICAgICAgfSk7CiAgICB9LAogICAgLy/ot6/nlLHot7PovazlubbmkLrluKbmrYzljZVpZHPmlbDnu4Tlj4LmlbAKICAgIHRvTXVzaWNMaXN0UGFnZTogZnVuY3Rpb24gdG9NdXNpY0xpc3RQYWdlKCkgewogICAgICB2YXIgcXVlcnlJZHMgPSAnJzsKICAgICAgdGhpcy5jdXJyZW50U29uZ0xpc3QudHJhY2tJZHMuZm9yRWFjaChmdW5jdGlvbiAoaXRlbSkgewogICAgICAgIHF1ZXJ5SWRzICs9IGl0ZW0uaWQgKyAnLCc7CiAgICAgIH0pOwogICAgICB0aGlzLiRyb3V0ZXIucHVzaCh7CiAgICAgICAgbmFtZTogJ211c2ljUGFnZScsCiAgICAgICAgcGFyYW1zOiB7CiAgICAgICAgICBpZHM6IHF1ZXJ5SWRzLnN1YnN0cigwLCBxdWVyeUlkcy5sZW5ndGggLSAxKQogICAgICAgIH0KICAgICAgfSk7CiAgICB9LAogICAgLy/ot6/nlLHot7PovazmkLrluKblj4LmlbAKICAgIHRvQ29tbWVudFBhZ2U6IGZ1bmN0aW9uIHRvQ29tbWVudFBhZ2UoKSB7CiAgICAgIHRoaXMuJHJvdXRlci5wdXNoKCcvY29tbWVudC8nICsgdGhpcy5jdXJyZW50SWQpOwogICAgfSwKICAgIC8v5a2Q57uE5Lu25Lyg6YCS5p2l55qE5q2M5Y2V5omA5pyJ5q2M5puyaWTkv6Hmga8s5ZKM5b2T5YmN5pKt5pS+55qE6Z+z5LmQ55qEaWQKICAgIHNldFNvbmdMaXN0SW5mbzogZnVuY3Rpb24gc2V0U29uZ0xpc3RJbmZvKHNvbmdMaXN0LCBjdXJJZCkgewogICAgICB0aGlzLnBsYXlMaXN0ID0gc29uZ0xpc3Q7CiAgICAgIHRoaXMuJGVtaXQoJ3NldFNvbmdMaXN0SW5mbycsIHNvbmdMaXN0LCBjdXJJZCk7CiAgICB9CiAgfQp9Ow=="},{"version":3,"sources":["SongList.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4EA,eAAA;AACA,EAAA,IADA,kBACA;AACA,WAAA;AACA;AACA,MAAA,SAAA,EAAA,KAAA,MAAA,CAAA,MAAA,CAAA,EAAA,GAAA,KAAA,MAAA,CAAA,MAAA,CAAA,EAAA,GAAA,MAAA,CAAA,YAAA,CAAA,OAAA,CAAA,WAAA,CAFA;AAGA;AACA,MAAA,eAAA,EAAA;AACA;AACA,QAAA,OAAA,EAAA;AACA,UAAA,SAAA,EAAA,EADA;AAEA,UAAA,QAAA,EAAA;AAFA,SAFA;AAMA,QAAA,QAAA,EAAA;AANA,OAJA;AAYA;AACA,MAAA,QAAA,EAAA,EAbA;AAcA;AACA,MAAA,QAAA,EAAA,MAAA,CAAA,YAAA,CAAA,OAAA,CAAA,UAAA,MAAA,IAAA,GAAA,EAAA,GAAA,MAAA,CAAA,YAAA,CAAA,OAAA,CAAA,UAAA,EAAA,KAAA,CAAA,GAAA;AAfA,KAAA;AAiBA,GAnBA;AAoBA,EAAA,OApBA,qBAoBA;AACA,SAAA,eAAA;AACA,GAtBA;AAuBA,EAAA,OAvBA,qBAuBA;AACA;AACA,IAAA,MAAA,CAAA,YAAA,CAAA,OAAA,CAAA,WAAA,EAAA,KAAA,SAAA;AACA,GA1BA;AA2BA,EAAA,OAAA,EAAA;AACA;AACA,IAAA,eAFA,6BAEA;AAAA;;AACA,WAAA,KAAA,CAAA,GAAA,CAAA,iBAAA,EAAA;AAAA,QAAA,MAAA,EAAA;AAAA,UAAA,EAAA,EAAA,KAAA;AAAA;AAAA,OAAA,EAAA,IAAA,CAAA,UAAA,GAAA,EAAA;AACA,QAAA,KAAA,CAAA,eAAA,GAAA,GAAA,CAAA,IAAA,CAAA,QAAA,CADA,CAEA;;AACA,YAAA,IAAA,GAAA,MAAA,CAAA,QAAA,CAAA,IAAA;;AACA,YAAA,IAAA,CAAA,SAAA,CAAA,IAAA,CAAA,WAAA,CAAA,GAAA,CAAA,EAAA,IAAA,CAAA,MAAA,MAAA,YAAA,EAAA;AAAA;AACA,UAAA,KAAA,CAAA,eAAA;AACA;AACA,OAPA;AAQA,KAXA;AAYA;AACA,IAAA,eAbA,6BAaA;AACA,UAAA,QAAA,GAAA,EAAA;AACA,WAAA,eAAA,CAAA,QAAA,CAAA,OAAA,CAAA,UAAA,IAAA,EAAA;AACA,QAAA,QAAA,IAAA,IAAA,CAAA,EAAA,GAAA,GAAA;AACA,OAFA;AAGA,WAAA,OAAA,CAAA,IAAA,CAAA;AACA,QAAA,IAAA,EAAA,WADA;AAEA,QAAA,MAAA,EAAA;AACA,UAAA,GAAA,EAAA,QAAA,CAAA,MAAA,CAAA,CAAA,EAAA,QAAA,CAAA,MAAA,GAAA,CAAA;AADA;AAFA,OAAA;AAMA,KAxBA;AAyBA;AACA,IAAA,aA1BA,2BA0BA;AACA,WAAA,OAAA,CAAA,IAAA,CAAA,cAAA,KAAA,SAAA;AACA,KA5BA;AA6BA;AACA,IAAA,eA9BA,2BA8BA,QA9BA,EA8BA,KA9BA,EA8BA;AACA,WAAA,QAAA,GAAA,QAAA;AACA,WAAA,KAAA,CAAA,iBAAA,EAAA,QAAA,EAAA,KAAA;AACA;AAjCA;AA3BA,CAAA","sourcesContent":["<template>\r\n    <el-container style=\"margin-bottom: 55px;\">\r\n\r\n        <el-header height=\"220px;\">\r\n            <el-row>\r\n                <!--歌单图标-->\r\n                <img :src=\"currentSongList.coverImgUrl\" style=\"width: 220px;height: 220px;\"/>\r\n\r\n                <!--右侧歌曲信息-->\r\n                <div style=\"float:right;color: gray\">\r\n                    <div style=\"opacity: 0.6\">\r\n                        <p>歌曲数 | 播放量</p>\r\n                        <p style=\"float:right;margin: 0\">{{currentSongList.trackCount}} |\r\n                            {{(currentSongList.playCount/10000).toFixed(0)}}万</p>\r\n                    </div>\r\n                </div>\r\n\r\n                <!--标签及名字-->\r\n                <el-tag type=\"danger\" style=\"background-color: white;position: absolute;top: 0;left: 240px;\">精品歌单\r\n                </el-tag>\r\n                <h2 style=\"position: absolute;top: -20px;left: 320px;font-weight: 400\">{{currentSongList.name}}</h2>\r\n\r\n                <!--作者信息-->\r\n                <img :src=\"currentSongList.creator.avatarUrl\"\r\n                     style=\"width: 35px;height: 35px;border-radius:15px;position: absolute;top: 50px;left: 15%;\">\r\n                <span style=\"position:absolute;top: 57px;left: 18%;\">{{currentSongList.creator.nickname}}</span>\r\n                <span style=\"position:absolute;top: 57px;left: 25%;opacity: 0.7;\">{{currentSongList.createTime | dateFormat}}创建</span>\r\n\r\n\r\n                <!--按钮组-->\r\n                <el-button type=\"danger\" size=\"mini\" icon=\"el-icon-video-play\"\r\n                           style=\"position:absolute;top: 100px;left: 240px;\"\r\n                           @click=\"setSongListInfo(playList,playList[0])\">\r\n                    播放全部\r\n                </el-button>\r\n\r\n                <el-button icon=\"el-icon-folder-add\" size=\"mini\"\r\n                           style=\"position: absolute;top: 100px;left: 340px;color: black\">\r\n                    收藏({{currentSongList.subscribedCount}})\r\n                </el-button>\r\n\r\n                <el-button icon=\"el-icon-share\" size=\"mini\"\r\n                           style=\"position: absolute;top: 100px;left: 480px;color: black\">\r\n                    分享({{currentSongList.shareCount}})\r\n                </el-button>\r\n\r\n                <!--标签信息-->\r\n                <span style=\"position: absolute;top: 150px;left: 240px;\">\r\n                    标签: <span style=\"color: rgb(12,115,194);cursor: pointer\"\r\n                              v-for=\"(item,index) in currentSongList.tags\">{{index+1 === currentSongList.tags.length ? item : item+' / '}}</span>\r\n                </span>\r\n\r\n                <!--简介信息-->\r\n                <el-collapse style=\"position: absolute;top: 180px;left: 240px;border: none;z-index: 999\">\r\n                    <el-collapse-item :title=\"'简介: ' + (currentSongList.description + '').substr(0,26) + '...' \">\r\n                        <p>{{currentSongList.description}}</p>\r\n                    </el-collapse-item>\r\n                </el-collapse>\r\n            </el-row>\r\n\r\n        </el-header>\r\n\r\n        <el-main>\r\n\r\n            <el-menu default-active=\"1\" class=\"el-menu-demo\" mode=\"horizontal\" style=\"width: 280px;\">\r\n                <el-menu-item index=\"1\" @click=\"toMusicListPage\">歌曲列表</el-menu-item>\r\n                <el-menu-item index=\"2\" @click=\"toCommentPage\">评论({{currentSongList.commentCount}})</el-menu-item>\r\n            </el-menu>\r\n\r\n            <router-view ref=\"child\" @setSongListInfo=\"setSongListInfo\"></router-view>\r\n        </el-main>\r\n\r\n    </el-container>\r\n</template>\r\n\r\n<script>\r\n    export default {\r\n        data() {\r\n            return {\r\n                //前一个组件传递过来的值 放入localStorage保存\r\n                currentId: this.$route.params.id ? this.$route.params.id : window.localStorage.getItem('currentId'),\r\n                //当前歌单信息\r\n                currentSongList: {\r\n                    //创建人信息\r\n                    creator: {\r\n                        avatarUrl: '',\r\n                        nickname: '',\r\n                    },\r\n                    trackIds: []\r\n                },\r\n                //传递给下一个组件的所有歌曲id查询信息\r\n                queryIds: '',\r\n                //当前歌单所有歌曲id信息\r\n                playList: window.localStorage.getItem('playList') === null ? [] : window.localStorage.getItem('playList').split(',')\r\n            }\r\n        },\r\n        created() {\r\n            this.getSongListInfo();\r\n        },\r\n        mounted() {\r\n            //把上一个页面传递来的参数放入localstorage 防止页面刷新 参数没了\r\n            window.localStorage.setItem('currentId', this.currentId);\r\n        },\r\n        methods: {\r\n            //获取歌单信息并处理歌单所有歌曲数据\r\n            getSongListInfo() {\r\n                this.$http.get('playlist/detail', {params: {id: this.currentId}}).then(res => {\r\n                    this.currentSongList = res.data.playlist\r\n                    //等待数据赋值后,马上自执行一次路由跳转加载子组件\r\n                    const href = window.location.href;\r\n                    if (href.substring(href.lastIndexOf('/'), href.length) !== '/musicPage') {//如果为自跳转则执行\r\n                        this.toMusicListPage()\r\n                    }\r\n                })\r\n            },\r\n            //路由跳转并携带歌单ids数组参数\r\n            toMusicListPage() {\r\n                var queryIds = ''\r\n                this.currentSongList.trackIds.forEach(item => {\r\n                    queryIds += item.id + ','\r\n                })\r\n                this.$router.push({\r\n                    name: 'musicPage',\r\n                    params: {\r\n                        ids: queryIds.substr(0, queryIds.length - 1)\r\n                    }\r\n                })\r\n            },\r\n            //路由跳转携带参数\r\n            toCommentPage() {\r\n                this.$router.push('/comment/' + this.currentId);\r\n            },\r\n            //子组件传递来的歌单所有歌曲id信息,和当前播放的音乐的id\r\n            setSongListInfo(songList,curId) {\r\n                this.playList = songList\r\n                this.$emit('setSongListInfo',songList,curId);\r\n            }\r\n        },\r\n    }\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n    .el-button {\r\n        border-radius: 5px;\r\n        color: white;\r\n    }\r\n\r\n    .el-menu.el-menu--horizontal {\r\n        border-bottom: 0px;\r\n    }\r\n\r\n    .el-menu-item.is-active {\r\n        color: black;\r\n        border-bottom: 2px solid red !important;\r\n    }\r\n</style>\r\n"],"sourceRoot":"src/components/recommend/diy"}]}