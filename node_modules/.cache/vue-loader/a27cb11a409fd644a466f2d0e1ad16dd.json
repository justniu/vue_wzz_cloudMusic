{"remainingRequest":"E:\\前端\\vue_wzz_music\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\前端\\vue_wzz_music\\src\\components\\findMusic\\diyRecommend\\SongList.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\前端\\vue_wzz_music\\src\\components\\findMusic\\diyRecommend\\SongList.vue","mtime":1598434370801},{"path":"E:\\前端\\vue_wzz_music\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\前端\\vue_wzz_music\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\前端\\vue_wzz_music\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\前端\\vue_wzz_music\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmV4cG9ydCBkZWZhdWx0IHsKICAgIGRhdGEoKSB7CiAgICAgICAgcmV0dXJuIHsKICAgICAgICAgICAgLy/liY3kuIDkuKrnu4Tku7bkvKDpgJLov4fmnaXnmoTlgLwg5pS+5YWlbG9jYWxTdG9yYWdl5L+d5a2YCiAgICAgICAgICAgIGN1cnJlbnRJZDogdGhpcy4kcm91dGUucGFyYW1zLmlkID8gdGhpcy4kcm91dGUucGFyYW1zLmlkIDogd2luZG93LmxvY2FsU3RvcmFnZS5nZXRJdGVtKCdjdXJyZW50SWQnKSwKICAgICAgICAgICAgLy/lvZPliY3mrYzljZXkv6Hmga8KICAgICAgICAgICAgY3VycmVudFNvbmdMaXN0OiB7CiAgICAgICAgICAgICAgICAvL+WIm+W7uuS6uuS/oeaBrwogICAgICAgICAgICAgICAgY3JlYXRvcjogewogICAgICAgICAgICAgICAgICAgIGF2YXRhclVybDogJycsCiAgICAgICAgICAgICAgICAgICAgbmlja25hbWU6ICcnLAogICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgIHRyYWNrSWRzOiBbXQogICAgICAgICAgICB9LAogICAgICAgICAgICAvL+S8oOmAkue7meS4i+S4gOS4que7hOS7tueahOaJgOacieatjOabsmlk5p+l6K+i5L+h5oGvCiAgICAgICAgICAgIHF1ZXJ5SWRzOiAnJywKICAgICAgICAgICAgLy/lvZPliY3mrYzljZXmiYDmnInmrYzmm7JpZOS/oeaBrwogICAgICAgICAgICBwbGF5TGlzdDogd2luZG93LmxvY2FsU3RvcmFnZS5nZXRJdGVtKCdwbGF5TGlzdCcpID09PSBudWxsID8gW10gOiB3aW5kb3cubG9jYWxTdG9yYWdlLmdldEl0ZW0oJ3BsYXlMaXN0Jykuc3BsaXQoJywnKQogICAgICAgIH0KICAgIH0sCiAgICBjcmVhdGVkKCkgewogICAgICAgIHRoaXMuZ2V0U29uZ0xpc3RJbmZvKCk7CiAgICAgICAgLy/ms6jlhoznm5HlkKznmoTkuovku7Yg5ZyobWFpbi5qc+S4reWumuS5ieS6hgogICAgICAgIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKCdzZXRJdGVtJywgKCkgPT4gewogICAgICAgICAgICAvL+i/memHjOaYr+S4uuS6huS7juS4u+mhtei/m+WFpeeahOatjOWNlSDpobXpnaLkuI3ov5vooYzlj5jljJYg5omA5Lul5Yqg5LiA5LiqbG9jYWxzdG9yYWdl55uR5ZCs5ZmoIOebkeWQrOW9k+WJjeatjOWNleWPmOWMlgogICAgICAgICAgICAvL+WmguaenOacieWPmOWMluebtOaOpeWwsemHjeaWsOafpeivouaVsOaNriDmm7/mjaLmjonkuYvliY3nmoTmlbDmja4gIOWunueOsOWIt+aWsOmhtemdogogICAgICAgICAgICB0aGlzLmN1cnJlbnRJZCA9IHBhcnNlSW50KGxvY2FsU3RvcmFnZS5nZXRJdGVtKCdjdXJyZW50SWQnKSkKICAgICAgICAgICAgLy/ph43mlrDliqDovb3mlbDmja4o5pqC5pyJQlVH5pyq5L+uKQogICAgICAgICAgICB0aGlzLmdldFNvbmdMaXN0SW5mbygpCgogICAgICAgIH0pCiAgICB9LAogICAgbW91bnRlZCgpIHsKICAgICAgICAvL+aKiuS4iuS4gOS4qumhtemdouS8oOmAkuadpeeahOWPguaVsOaUvuWFpWxvY2Fsc3RvcmFnZSDpmLLmraLpobXpnaLliLfmlrAg5Y+C5pWw5rKh5LqGCiAgICAgICAgd2luZG93LmxvY2FsU3RvcmFnZS5zZXRJdGVtKCdjdXJyZW50SWQnLCB0aGlzLmN1cnJlbnRJZCk7CiAgICB9LAogICAgbWV0aG9kczogewogICAgICAgIC8v6I635Y+W5q2M5Y2V5L+h5oGv5bm25aSE55CG5q2M5Y2V5omA5pyJ5q2M5puy5pWw5o2uCiAgICAgICAgZ2V0U29uZ0xpc3RJbmZvKCkgewogICAgICAgICAgICB0aGlzLiRodHRwLmdldCgncGxheWxpc3QvZGV0YWlsJywge3BhcmFtczoge2lkOiB0aGlzLmN1cnJlbnRJZH19KS50aGVuKHJlcyA9PiB7CiAgICAgICAgICAgICAgICB0aGlzLmN1cnJlbnRTb25nTGlzdCA9IHJlcy5kYXRhLnBsYXlsaXN0CiAgICAgICAgICAgICAgICAvL+etieW+heaVsOaNrui1i+WAvOWQjizpqazkuIroh6rmiafooYzkuIDmrKHot6/nlLHot7PovazliqDovb3lrZDnu4Tku7YKICAgICAgICAgICAgICAgIGNvbnN0IGhyZWYgPSB3aW5kb3cubG9jYXRpb24uaHJlZjsKICAgICAgICAgICAgICAgIGlmIChocmVmLnN1YnN0cmluZyhocmVmLmxhc3RJbmRleE9mKCcvJyksIGhyZWYubGVuZ3RoKSAhPT0gJy9tdXNpY1BhZ2UnKSB7Ly/lpoLmnpzkuLroh6rot7PovazliJnmiafooYwKICAgICAgICAgICAgICAgICAgICB0aGlzLnRvTXVzaWNMaXN0UGFnZSgpCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0pCiAgICAgICAgfSwKICAgICAgICAvL+i3r+eUsei3s+i9rOW5tuaQuuW4puatjOWNlWlkc+aVsOe7hOWPguaVsAogICAgICAgIHRvTXVzaWNMaXN0UGFnZSgpIHsKICAgICAgICAgICAgdmFyIHF1ZXJ5SWRzID0gJycKICAgICAgICAgICAgdGhpcy5jdXJyZW50U29uZ0xpc3QudHJhY2tJZHMuZm9yRWFjaChpdGVtID0+IHsKICAgICAgICAgICAgICAgIHF1ZXJ5SWRzICs9IGl0ZW0uaWQgKyAnLCcKICAgICAgICAgICAgfSkKICAgICAgICAgICAgdGhpcy4kcm91dGVyLnB1c2goewogICAgICAgICAgICAgICAgbmFtZTogJ211c2ljUGFnZScsCiAgICAgICAgICAgICAgICBwYXJhbXM6IHsKICAgICAgICAgICAgICAgICAgICBpZHM6IHF1ZXJ5SWRzLnN1YnN0cigwLCBxdWVyeUlkcy5sZW5ndGggLSAxKQogICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9KQogICAgICAgIH0sCiAgICAgICAgLy/ot6/nlLHot7PovazmkLrluKblj4LmlbAKICAgICAgICB0b0NvbW1lbnRQYWdlKCkgewogICAgICAgICAgICB0aGlzLiRyb3V0ZXIucHVzaCgnL2NvbW1lbnQvJyArIHRoaXMuY3VycmVudElkKTsKICAgICAgICB9LAogICAgICAgIC8v5a2Q57uE5Lu25Lyg6YCS5p2l55qE5q2M5Y2V5omA5pyJ5q2M5puyaWTkv6Hmga8s5ZKM5b2T5YmN5pKt5pS+55qE6Z+z5LmQ55qEaWQKICAgICAgICBzZXRTb25nTGlzdEluZm8oc29uZ0xpc3QsIGN1cklkKSB7CiAgICAgICAgICAgIHRoaXMucGxheUxpc3QgPSBzb25nTGlzdAogICAgICAgICAgICB0aGlzLiRlbWl0KCdzZXRTb25nTGlzdEluZm8nLCBzb25nTGlzdCwgY3VySWQpOwogICAgICAgIH0sCiAgICAgICAgLy/mlLbol4/mrYzljZUKICAgICAgICBzdWJzY3JpcGUoaWQpIHsKICAgICAgICAgICAgdGhpcy4kaHR0cC5nZXQoJ3BsYXlsaXN0L3N1YnNjcmliZScsIHtwYXJhbXM6IHtpZDogaWQsIHQ6IDF9fSkudGhlbihyZXMgPT4gewogICAgICAgICAgICAgICAgY29uc29sZS5sb2cocmVzKQogICAgICAgICAgICAgICAgaWYgKHJlcy5kYXRhLmNvZGUgPT09IDIwMCkgewogICAgICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLiRtZXNzYWdlLnN1Y2Nlc3MoJ+aUtuiXj+aIkOWKnyzmlbDmja7lkIzmraXpnIDopoHml7bpl7QhJykKICAgICAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMuJG1lc3NhZ2UuaW5mbygn5pS26JeP5aSx6LSlIScpCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0pCiAgICAgICAgfQogICAgfSwKfQo="},{"version":3,"sources":["SongList.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"SongList.vue","sourceRoot":"src/components/findMusic/diyRecommend","sourcesContent":["<template>\r\n    <el-container style=\"margin-bottom: 55px;\">\r\n\r\n        <el-header height=\"220px;\">\r\n            <el-row>\r\n                <!--歌单图标-->\r\n                <img :src=\"currentSongList.coverImgUrl\" style=\"width: 220px;height: 220px;\"/>\r\n\r\n                <!--右侧歌曲信息-->\r\n                <div style=\"float:right;color: gray\">\r\n                    <div style=\"opacity: 0.6\">\r\n                        <p>歌曲数 | 播放量</p>\r\n                        <p style=\"float:right;margin: 0\">{{currentSongList.trackCount}} |\r\n                            {{(currentSongList.playCount/10000).toFixed(0)}}万</p>\r\n                    </div>\r\n                </div>\r\n\r\n                <!--标签及名字-->\r\n                <el-tag type=\"danger\" style=\"background-color: white;position: absolute;top: 0;left: 240px;\">精品歌单\r\n                </el-tag>\r\n                <h2 style=\"position: absolute;top: -20px;left: 320px;font-weight: 400\">{{currentSongList.name}}</h2>\r\n\r\n                <!--作者信息-->\r\n                <img :src=\"currentSongList.creator.avatarUrl\"\r\n                     style=\"width: 35px;height: 35px;border-radius:15px;position: absolute;top: 50px;left: 15%;\">\r\n                <span style=\"position:absolute;top: 57px;left: 18%;\">{{currentSongList.creator.nickname}}</span>\r\n                <span style=\"position:absolute;top: 57px;left: 27%;opacity: 0.7;\">{{currentSongList.createTime | dateFormat}}创建</span>\r\n\r\n\r\n                <!--按钮组-->\r\n                <el-button type=\"danger\" size=\"mini\" icon=\"el-icon-video-play\"\r\n                           style=\"position:absolute;top: 100px;left: 240px;\"\r\n                           @click=\"setSongListInfo(playList,playList[0])\">\r\n                    播放全部\r\n                </el-button>\r\n\r\n                <el-button icon=\"el-icon-folder-add\" size=\"mini\" @click=\"subscripe(currentSongList.id)\"\r\n                           style=\"position: absolute;top: 100px;left: 340px;color: black\">\r\n                    收藏({{currentSongList.subscribedCount}})\r\n                </el-button>\r\n\r\n                <el-button icon=\"el-icon-share\" size=\"mini\"\r\n                           style=\"position: absolute;top: 100px;left: 480px;color: black\">\r\n                    分享({{currentSongList.shareCount}})\r\n                </el-button>\r\n\r\n                <!--标签信息-->\r\n                <span style=\"position: absolute;top: 150px;left: 240px;\">\r\n                    标签: <span style=\"color: rgb(12,115,194);cursor: pointer\"\r\n                              v-for=\"(item,index) in currentSongList.tags\">{{index+1 === currentSongList.tags.length ? item : item+' / '}}</span>\r\n                </span>\r\n\r\n                <!--简介信息-->\r\n                <el-collapse style=\"position: absolute;top: 180px;left: 240px;border: none;z-index: 999\">\r\n                    <el-collapse-item :title=\"'简介: ' + (currentSongList.description + '').substr(0,26) + '...' \">\r\n                        <p>{{currentSongList.description}}</p>\r\n                    </el-collapse-item>\r\n                </el-collapse>\r\n            </el-row>\r\n\r\n        </el-header>\r\n\r\n        <el-main>\r\n\r\n            <el-menu default-active=\"1\" class=\"el-menu-demo\" mode=\"horizontal\" style=\"width: 280px;\">\r\n                <el-menu-item index=\"1\" @click=\"toMusicListPage\">歌曲列表</el-menu-item>\r\n                <el-menu-item index=\"2\" @click=\"toCommentPage\">评论({{currentSongList.commentCount}})</el-menu-item>\r\n            </el-menu>\r\n\r\n            <router-view ref=\"child\" @setSongListInfo=\"setSongListInfo\"></router-view>\r\n        </el-main>\r\n\r\n    </el-container>\r\n</template>\r\n\r\n<script>\r\n    export default {\r\n        data() {\r\n            return {\r\n                //前一个组件传递过来的值 放入localStorage保存\r\n                currentId: this.$route.params.id ? this.$route.params.id : window.localStorage.getItem('currentId'),\r\n                //当前歌单信息\r\n                currentSongList: {\r\n                    //创建人信息\r\n                    creator: {\r\n                        avatarUrl: '',\r\n                        nickname: '',\r\n                    },\r\n                    trackIds: []\r\n                },\r\n                //传递给下一个组件的所有歌曲id查询信息\r\n                queryIds: '',\r\n                //当前歌单所有歌曲id信息\r\n                playList: window.localStorage.getItem('playList') === null ? [] : window.localStorage.getItem('playList').split(',')\r\n            }\r\n        },\r\n        created() {\r\n            this.getSongListInfo();\r\n            //注册监听的事件 在main.js中定义了\r\n            window.addEventListener('setItem', () => {\r\n                //这里是为了从主页进入的歌单 页面不进行变化 所以加一个localstorage监听器 监听当前歌单变化\r\n                //如果有变化直接就重新查询数据 替换掉之前的数据  实现刷新页面\r\n                this.currentId = parseInt(localStorage.getItem('currentId'))\r\n                //重新加载数据(暂有BUG未修)\r\n                this.getSongListInfo()\r\n\r\n            })\r\n        },\r\n        mounted() {\r\n            //把上一个页面传递来的参数放入localstorage 防止页面刷新 参数没了\r\n            window.localStorage.setItem('currentId', this.currentId);\r\n        },\r\n        methods: {\r\n            //获取歌单信息并处理歌单所有歌曲数据\r\n            getSongListInfo() {\r\n                this.$http.get('playlist/detail', {params: {id: this.currentId}}).then(res => {\r\n                    this.currentSongList = res.data.playlist\r\n                    //等待数据赋值后,马上自执行一次路由跳转加载子组件\r\n                    const href = window.location.href;\r\n                    if (href.substring(href.lastIndexOf('/'), href.length) !== '/musicPage') {//如果为自跳转则执行\r\n                        this.toMusicListPage()\r\n                    }\r\n                })\r\n            },\r\n            //路由跳转并携带歌单ids数组参数\r\n            toMusicListPage() {\r\n                var queryIds = ''\r\n                this.currentSongList.trackIds.forEach(item => {\r\n                    queryIds += item.id + ','\r\n                })\r\n                this.$router.push({\r\n                    name: 'musicPage',\r\n                    params: {\r\n                        ids: queryIds.substr(0, queryIds.length - 1)\r\n                    }\r\n                })\r\n            },\r\n            //路由跳转携带参数\r\n            toCommentPage() {\r\n                this.$router.push('/comment/' + this.currentId);\r\n            },\r\n            //子组件传递来的歌单所有歌曲id信息,和当前播放的音乐的id\r\n            setSongListInfo(songList, curId) {\r\n                this.playList = songList\r\n                this.$emit('setSongListInfo', songList, curId);\r\n            },\r\n            //收藏歌单\r\n            subscripe(id) {\r\n                this.$http.get('playlist/subscribe', {params: {id: id, t: 1}}).then(res => {\r\n                    console.log(res)\r\n                    if (res.data.code === 200) {\r\n                        return this.$message.success('收藏成功,数据同步需要时间!')\r\n                    } else {\r\n                        return this.$message.info('收藏失败!')\r\n                    }\r\n                })\r\n            }\r\n        },\r\n    }\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n    .el-button {\r\n        border-radius: 5px;\r\n        color: white;\r\n    }\r\n\r\n    .el-menu.el-menu--horizontal {\r\n        border-bottom: 0px;\r\n    }\r\n\r\n    .el-menu-item.is-active {\r\n        color: black;\r\n        border-bottom: 2px solid red !important;\r\n    }\r\n</style>\r\n"]}]}