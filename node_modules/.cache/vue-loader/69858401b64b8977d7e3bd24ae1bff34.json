{"remainingRequest":"E:\\前端\\vue_wzz_music\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\前端\\vue_wzz_music\\src\\components\\recommend\\diy\\MusicListTable.vue?vue&type=style&index=0&id=a32df82e&scoped=true&lang=css&","dependencies":[{"path":"E:\\前端\\vue_wzz_music\\src\\components\\recommend\\diy\\MusicListTable.vue","mtime":1597971346788},{"path":"E:\\前端\\vue_wzz_music\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\前端\\vue_wzz_music\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"E:\\前端\\vue_wzz_music\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"E:\\前端\\vue_wzz_music\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\前端\\vue_wzz_music\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi5lbC10YWJsZSB0ZCwgLmVsLXRhYmxlIHRoewogICAgcGFkZGluZzogOHB4IDA7Cn0K"},{"version":3,"sources":["MusicListTable.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6DA;AACA;AACA","file":"MusicListTable.vue","sourceRoot":"src/components/recommend/diy","sourcesContent":["<template>\r\n    <!--歌曲列表-->\r\n    <el-table :data=\"currentMusicListInfo\" border stripe>\r\n        <el-table-column type=\"index\"></el-table-column>\r\n\r\n        <el-table-column label=\"操作\" width=\"70px;\">\r\n            <template>\r\n                <i class=\"el-icon-star-off\" style=\"font-size: 18px;cursor: pointer\"></i>\r\n                <i class=\"el-icon-download\" style=\"margin-left: 10px;font-size: 18px;cursor:pointer;\"></i>\r\n            </template>\r\n        </el-table-column>\r\n\r\n        <el-table-column label=\"音乐标题\" prop=\"name\"></el-table-column>\r\n\r\n        <el-table-column label=\"歌手\" prop=\"ar[0].name\"></el-table-column>\r\n\r\n        <el-table-column label=\"专辑名\" prop=\"al.name\"></el-table-column>\r\n\r\n        <el-table-column label=\"时长\" prop=\"dt\" width=\"80px;\"></el-table-column>\r\n\r\n    </el-table>\r\n</template>\r\n\r\n<script>\r\n    export default {\r\n        data() {\r\n            return {\r\n                //接受传递来的参数\r\n                queryIds: this.$route.params.ids ? this.$route.params.ids : window.localStorage.getItem('queryIds'),\r\n                //查询当前歌单所有音乐的name url 作者等等\r\n                currentMusicListInfo: [],\r\n            }\r\n        },\r\n        created() {\r\n            //获取列表信息数据\r\n            this.handlerSongList()\r\n        },\r\n        mounted() {\r\n            //放入上一个组件传递来的参数\r\n            window.localStorage.setItem('queryIds', this.queryIds)\r\n        },\r\n        methods: {\r\n            //处理歌单所有歌曲信息的查询(根据id)\r\n            handlerSongList() {\r\n                this.$http.get('song/detail', {params: {ids: this.queryIds}}).then(res => {\r\n                    this.currentMusicListInfo = res.data.songs\r\n                    //处理时长数据\r\n                    this.currentMusicListInfo.forEach(item => {\r\n                        const dt = new Date(item.dt)\r\n                        const mm = (dt.getMinutes() + '').padStart(2, '0')\r\n                        const ss = (dt.getSeconds() + '').padStart(2, '0')\r\n\r\n                        item.dt = mm + ':' + ss\r\n                    })\r\n                })\r\n            }\r\n        }\r\n    }\r\n</script>\r\n\r\n<style scoped>\r\n    .el-table td, .el-table th{\r\n        padding: 8px 0;\r\n    }\r\n</style>\r\n"]}]}