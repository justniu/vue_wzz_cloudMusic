{"remainingRequest":"E:\\前端\\vue_wzz_music\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\前端\\vue_wzz_music\\src\\components\\findMusic\\cloud\\CloudMusic.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\前端\\vue_wzz_music\\src\\components\\findMusic\\cloud\\CloudMusic.vue","mtime":1598412718450},{"path":"E:\\前端\\vue_wzz_music\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\前端\\vue_wzz_music\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\前端\\vue_wzz_music\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\前端\\vue_wzz_music\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmV4cG9ydCBkZWZhdWx0IHsKICAgIGRhdGEoKSB7CiAgICAgICAgcmV0dXJuIHsKICAgICAgICAgICAgLy/lvZPliY3pn7PkuZDnmoTlr7nosaEKICAgICAgICAgICAgY3VycmVudE11c2ljTGlzdEluZm86IFtdLAogICAgICAgICAgICAvL+eItue7hOS7tuW9k+WJjeaSreaUvueahOmfs+S5kOeahGlkCiAgICAgICAgICAgIGN1cklkOiBwYXJzZUludCh3aW5kb3cubG9jYWxTdG9yYWdlLmdldEl0ZW0oJ2N1clBsYXlNdXNpY0lkJykpLAogICAgICAgICAgICAvL+atjOWNleeahOatjOabsmlk5ZCI6ZuGCiAgICAgICAgICAgIHNvbmdMaXN0SW5mbzogW10sCiAgICAgICAgfQogICAgfSwKICAgIGNyZWF0ZWQoKSB7CiAgICAgICAgLy/ojrflj5bpn7PkuZDkupHnm5jnmoTmlbDmja4KICAgICAgICB0aGlzLmdldENsb3VkRGF0YSgpCiAgICAgICAgLy/ms6jlhoznm5HlkKznmoTkuovku7Yg5ZyobWFpbi5qc+S4reWumuS5ieS6hgogICAgICAgIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKCdzZXRJdGVtJywgKCkgPT4gewogICAgICAgICAgICB0aGlzLmN1cklkID0gcGFyc2VJbnQobG9jYWxTdG9yYWdlLmdldEl0ZW0oJ2N1clBsYXlNdXNpY0lkJykpCiAgICAgICAgfSkKICAgIH0sCiAgICBtZXRob2RzOiB7CiAgICAgICAgZ2V0Q2xvdWREYXRhKCkgewogICAgICAgICAgICB0aGlzLiRodHRwLmdldCgnL3VzZXIvY2xvdWQnLCB7cGFyYW1zOiB7bGltaXQ6IDEwMDB9fSkudGhlbihyZXMgPT4gewogICAgICAgICAgICAgICAgdGhpcy5jdXJyZW50TXVzaWNMaXN0SW5mbyA9IHJlcy5kYXRhLmRhdGEKICAgICAgICAgICAgICAgIC8v5aSE55CG5pe26Ze0CiAgICAgICAgICAgICAgICB0aGlzLmN1cnJlbnRNdXNpY0xpc3RJbmZvLmZvckVhY2goaXRlbSA9PiB7CiAgICAgICAgICAgICAgICAgICAgY29uc3QgZHQgPSBuZXcgRGF0ZShpdGVtLmFkZFRpbWUpCgogICAgICAgICAgICAgICAgICAgIGNvbnN0IHkgPSBkdC5nZXRGdWxsWWVhcigpCiAgICAgICAgICAgICAgICAgICAgY29uc3QgbSA9IChkdC5nZXRNb250aCgpKyAxICsnJykucGFkU3RhcnQoMiwnMCcpCiAgICAgICAgICAgICAgICAgICAgY29uc3QgZCA9IChkdC5nZXREYXkoKSArICcnKS5wYWRTdGFydCgyLCcwJykKCgogICAgICAgICAgICAgICAgICAgIGl0ZW0uYWRkVGltZSA9IGAke3l9LSR7bX0tJHtkfWAKICAgICAgICAgICAgICAgIH0pCiAgICAgICAgICAgICAgICAvL+iuvue9ruatjOWNleaJgOacieatjOabsueahGlk5L+h5oGvCiAgICAgICAgICAgICAgICB0aGlzLnNldFNvbmdMaXN0SW5mbygpCiAgICAgICAgICAgIH0pCiAgICAgICAgfSwKICAgICAgICAvL+WPjOWHu+atjOabsua3u+WKoOaVsOaNrui/m+WOuyzlubblvqrnjq/mkq3mlL4o5ZCR54i257uE5Lu25Lyg6YCS5Y+C5pWwKQogICAgICAgIHBsYXlNdXNpY0xpc3Qocm93KSB7CiAgICAgICAgICAgIHRoaXMuJGVtaXQoJ3NldFNvbmdMaXN0SW5mbycsIHRoaXMuc29uZ0xpc3RJbmZvLCByb3cuc2ltcGxlU29uZy5pZCkKICAgICAgICB9LAogICAgICAgIC8v6K6+572u5q2M5Y2V5omA5pyJ5q2M5puy55qEaWQKICAgICAgICBzZXRTb25nTGlzdEluZm8oKSB7CiAgICAgICAgICAgIHRoaXMuY3VycmVudE11c2ljTGlzdEluZm8uZm9yRWFjaChpdGVtID0+IHsKICAgICAgICAgICAgICAgIHRoaXMuc29uZ0xpc3RJbmZvLnB1c2goaXRlbS5zaW1wbGVTb25nLmlkKQogICAgICAgICAgICB9KQogICAgICAgIH0sCiAgICAgICAgLy/ngrnlh7vmrYzmiYvlkI3ot7PovazmrYzmiYvor6bnu4bpobXpnaIKICAgICAgICB0b1NpbmdlclBhZ2Uocm93LCBjb2x1bW4sIGNlbGwpIHsKICAgICAgICAgICAgaWYgKGNvbHVtbi5sYWJlbCA9PT0gIuatjOaJiyIpey8v54K55Ye755qE5piv5q2M5omL6YKj5LiA5YiXIOi/m+WFpeatjOaJi+ivpuaDhemhtQogICAgICAgICAgICAgICAgdGhpcy4kcm91dGVyLnB1c2goJy9zaW5nZXIvJytyb3cuc2ltcGxlU29uZy5hclswXS5pZCkKICAgICAgICAgICAgfQogICAgICAgIH0KICAgIH0KfQo="},{"version":3,"sources":["CloudMusic.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AA2BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"CloudMusic.vue","sourceRoot":"src/components/findMusic/cloud","sourcesContent":["<template>\r\n    <!--歌曲列表-->\r\n    <el-table :data=\"currentMusicListInfo\" ref=\"playTable\" highlight-current-row border stripe\r\n              style=\"cursor: context-menu;\" @row-dblclick=\"playMusicList\" @cell-click=\"toSingerPage\">\r\n\r\n        <el-table-column label=\"#\" type=\"index\">\r\n            <template scope=\"scope\">\r\n                <img v-if=\"curId === scope.row.simpleSong.id\" src=\"imgs/isPlay.png\" alt=\"\">\r\n                <p v-else>{{scope.$index+1}}</p>\r\n            </template>\r\n        </el-table-column>\r\n\r\n\r\n        <el-table-column v-if=\"false\" label=\"id\" prop=\"simpleSong.id\"></el-table-column>\r\n\r\n        <el-table-column label=\"音乐标题\" prop=\"songName\"></el-table-column>\r\n\r\n        <el-table-column label=\"歌手\" prop=\"simpleSong.ar[0].name\" width=\"80px;\"></el-table-column>\r\n\r\n        <el-table-column label=\"专辑名\" prop=\"album\"></el-table-column>\r\n\r\n        <el-table-column label=\"上传时间\" prop=\"addTime\" width=\"100px;\"></el-table-column>\r\n\r\n    </el-table>\r\n</template>\r\n\r\n<script>\r\n    export default {\r\n        data() {\r\n            return {\r\n                //当前音乐的对象\r\n                currentMusicListInfo: [],\r\n                //父组件当前播放的音乐的id\r\n                curId: parseInt(window.localStorage.getItem('curPlayMusicId')),\r\n                //歌单的歌曲id合集\r\n                songListInfo: [],\r\n            }\r\n        },\r\n        created() {\r\n            //获取音乐云盘的数据\r\n            this.getCloudData()\r\n            //注册监听的事件 在main.js中定义了\r\n            window.addEventListener('setItem', () => {\r\n                this.curId = parseInt(localStorage.getItem('curPlayMusicId'))\r\n            })\r\n        },\r\n        methods: {\r\n            getCloudData() {\r\n                this.$http.get('/user/cloud', {params: {limit: 1000}}).then(res => {\r\n                    this.currentMusicListInfo = res.data.data\r\n                    //处理时间\r\n                    this.currentMusicListInfo.forEach(item => {\r\n                        const dt = new Date(item.addTime)\r\n\r\n                        const y = dt.getFullYear()\r\n                        const m = (dt.getMonth()+ 1 +'').padStart(2,'0')\r\n                        const d = (dt.getDay() + '').padStart(2,'0')\r\n\r\n\r\n                        item.addTime = `${y}-${m}-${d}`\r\n                    })\r\n                    //设置歌单所有歌曲的id信息\r\n                    this.setSongListInfo()\r\n                })\r\n            },\r\n            //双击歌曲添加数据进去,并循环播放(向父组件传递参数)\r\n            playMusicList(row) {\r\n                this.$emit('setSongListInfo', this.songListInfo, row.simpleSong.id)\r\n            },\r\n            //设置歌单所有歌曲的id\r\n            setSongListInfo() {\r\n                this.currentMusicListInfo.forEach(item => {\r\n                    this.songListInfo.push(item.simpleSong.id)\r\n                })\r\n            },\r\n            //点击歌手名跳转歌手详细页面\r\n            toSingerPage(row, column, cell) {\r\n                if (column.label === \"歌手\"){//点击的是歌手那一列 进入歌手详情页\r\n                    this.$router.push('/singer/'+row.simpleSong.ar[0].id)\r\n                }\r\n            }\r\n        }\r\n    }\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>\r\n"]}]}